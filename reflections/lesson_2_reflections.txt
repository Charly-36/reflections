¿Qué sucede cuando se inicializa un repositorio? ¿Por qué necesitas hacerlo?
	Se crea un nuevo proyecto, se podría decir que la carpeta donde se gusradará todo el contenido de nuestro proyecto, los archivos, es necesario para tener un orden en nuesra documentación, creación.

¿En qué se diferencia el área de preparación del directorio de trabajo y del repositorio qué valor crees que ofrece?
	El area de preparación del directorio de trabajo es donde se guarda todo el contenido de un proyecto, diferentes formatos de archivos, carpetas, mientras que 
	el repositorio puede ser una o varias subcarpetas dentro del area de trabajo principal, esto es de gran ayuda y muy importante en trabajos o proyectos de programación
	ya que los diferentes archivos deben estar ordenados de una forma eficaz.	

¿Cómo puede usar el área de preparación para asegurarse de que tiene un compromiso por lógica cambio?
	Sería en los trabajos en equipo, ya que es una obligación que todos cooperen, y el estar pasando la parte que ya hizo uno y unirlo con el de alguien más, resulta muy tedioso,
	estar descargando, subiendo archivos, en este caso se va actualizando todo, los cambios se van guardando de acuerdo a los commit que realiza cada usuario en el area
 	de trabajo donde participan todos.

¿Cuáles son algunas situaciones en las que las sucursales serían útiles para mantener su historial?
¿organizado? ¿Cómo ayudarían las ramas?
	El ver las actividades que se realizaron total o parcialmente, esto organizado por categorías (ramas) o como lo maneje el sistema, sería de gran ayuda para mantener
	una mejor organzación de la sucursal.

¿Cómo te ayudan los diagramas a visualizar la estructura de la rama?
	Ayudan a crear u obtener una mejor idea para organizar lo mejor posible las ramas o tareas que se desglozan unas de las otras, a identificar quiénes trabajarán
	 en alguna area, la gente que se necesita, etc.

¿Cuál es el resultado de fusionar dos ramas juntas? ¿Por qué lo representamos en
el diagrama cómo lo hacemos?
	El resultado de la fusión es crear una sola versión a partir de dos diferentes, suponiendo que hay dos personas programando un sistema de alumnos y profesores, uno realiza
	la parte del alumno y el otro la del profesor y al final se fusiona(une todo), evitanto estar uniendo por partes. 
	Se representa en el diagrama de flujo porque al final de dos o más tareas se desea llegar a un solo objetivo.

¿Cuáles son los pros y los contras de la fusión automática de Git frente a la fusión siempre realizada
a mano?
	La fusión automática se realiza en un momento cualquiera, sin importar que el o los usuarios estén de acuerdo o lo hayan autorizado, esto fáciliza a estar haciendo commits
	el problema es que no siempre deseamos que se haga en ese momento, hacerla a mano lleva un tiempo, pero a mi parecer es mejor porque como usuario ya está consiente de hacerlo
	y está seguro de ello.